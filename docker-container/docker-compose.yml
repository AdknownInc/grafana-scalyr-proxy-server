version: '3.1'

services:
  web:
    container_name: nginx_grafana_scalyr
    image: nginx:alpine
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./nginx/vhosts:/etc/nginx/conf.d/vhosts"
      - "../source:/var/www/html"
      - log-infra-nginx:/var/log/nginx/
    ports:
      - "8000:80"
    depends_on:
      - php
  php:
    container_name: php_grafana_scalyr
    build: php-fpm-debug/
    volumes:
      - "../source:/var/www/html"
      - log-app:/var/log/myapp
      - vendor-code:/var/www/html/vendor
    environment:
      - SCALYR_READ_KEY=${SCALYR_READ_KEY}
      - SCALYR_READ_CONFIG_KEY=${SCALYR_READ_CONFIG_KEY}
    depends_on:
      - composer
  composer:
    container_name: composer_grafana_scalyr
    build: composer/
    command: [update, install --ignore-platform-reqs --no-dev -o -v]
    environment:
      - SSH_AUTH_SOCK    
    volumes:
    - vendor-code:/app/vendor
    - "../source:/app"
    - ~/.ssh:/root/.ssh
    - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
  grafana:
    container_name: grafana_grafana_scalyr
    build: grafana/
    depends_on:
      - mysql
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - "./grafana/defaults.ini:/usr/share/grafana/conf/defaults.ini"
      - "./grafana/provisioning:/etc/grafana/provisioning"
      - "./grafana/dashboard-layouts/:/usr/share/grafana/dashboard-layouts"
      - ${RELATIVE_SCALYR_DATASOURCE_PLUGIN_DIR}:/var/lib/grafana/plugins/grafana-scalyr-datasource-plugin"
  scalyr:
    container_name: scalyr_grafana_scalyr
    image: scalyr/scalyr-docker-agent
    volumes:
    - ./scalyr/agent.d:/etc/scalyr-agent-2/agent.d
    - /run/docker.sock:/var/scalyr/docker.sock
    - log-app:/var/log/myapp
    - log-infra-nginx:/var/log/nginx
    environment:
    - DOCKER_HOST_NAME=grafanaProxy
    - DOCKER_TIER=dev
    - DOCKER_SYSTEM=grafana
  mysql:
    container_name: mysql_grafana_scalyr
    image: mysql:5.7
    command: mysqld --sql_mode=""
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
    - "3306:3306"
    volumes:
    - mysql_data:/var/lib/mysql/
    - "./mysql/data:/docker-entrypoint-initdb.d"
    - "./mysql/config:/etc/mysql/conf.d"
volumes:
  log-app: ~
  log-infra-nginx: ~
  vendor-code: ~
  mysql_data: ~


